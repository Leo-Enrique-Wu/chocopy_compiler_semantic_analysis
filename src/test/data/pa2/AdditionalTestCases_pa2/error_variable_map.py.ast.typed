{
  "kind" : "Program",
  "location" : [ 1, 1, 13, 2 ],
  "declarations" : [ {
    "kind" : "VarDef",
    "location" : [ 1, 1, 1, 9 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 1, 1, 1, 5 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 1, 1, 1, 1 ],
        "name" : "x"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 1, 3, 1, 5 ],
        "className" : "int"
      }
    },
    "value" : {
      "kind" : "IntegerLiteral",
      "location" : [ 1, 9, 1, 9 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 1
    }
  }, {
    "kind" : "FuncDef",
    "location" : [ 2, 1, 4, 23 ],
    "name" : {
      "kind" : "Identifier",
      "location" : [ 2, 5, 2, 7 ],
      "name" : "foo"
    },
    "params" : [ ],
    "returnType" : {
      "kind" : "ClassType",
      "location" : [ 2, 10, 2, 10 ],
      "className" : "<None>"
    },
    "declarations" : [ ],
    "statements" : [ {
      "kind" : "ExprStmt",
      "location" : [ 3, 5, 3, 12 ],
      "expr" : {
        "kind" : "CallExpr",
        "location" : [ 3, 5, 3, 12 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "<None>"
        },
        "function" : {
          "kind" : "Identifier",
          "location" : [ 3, 5, 3, 9 ],
          "inferredType" : {
            "kind" : "FuncType",
            "parameters" : [ {
              "kind" : "ClassValueType",
              "className" : "object"
            } ],
            "returnType" : {
              "kind" : "ClassValueType",
              "className" : "<None>"
            }
          },
          "name" : "print"
        },
        "args" : [ {
          "kind" : "Identifier",
          "location" : [ 3, 11, 3, 11 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "name" : "x"
        } ]
      }
    }, {
      "kind" : "AssignStmt",
      "location" : [ 4, 5, 4, 9 ],
      "targets" : [ {
        "kind" : "Identifier",
        "location" : [ 4, 5, 4, 5 ],
        "errorMsg" : "Cannot assign to variable that is not explicitly declared in this scope: x",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "name" : "x"
      } ],
      "value" : {
        "kind" : "IntegerLiteral",
        "location" : [ 4, 9, 4, 9 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "value" : 2
      }
    } ]
  }, {
    "kind" : "ClassDef",
    "location" : [ 5, 1, 13, 1 ],
    "name" : {
      "kind" : "Identifier",
      "location" : [ 5, 7, 5, 7 ],
      "name" : "A"
    },
    "superClass" : {
      "kind" : "Identifier",
      "location" : [ 5, 9, 5, 14 ],
      "name" : "object"
    },
    "declarations" : [ {
      "kind" : "VarDef",
      "location" : [ 6, 5, 6, 14 ],
      "var" : {
        "kind" : "TypedVar",
        "location" : [ 6, 5, 6, 9 ],
        "identifier" : {
          "kind" : "Identifier",
          "location" : [ 6, 5, 6, 5 ],
          "name" : "x"
        },
        "type" : {
          "kind" : "ClassType",
          "location" : [ 6, 7, 6, 9 ],
          "className" : "str"
        }
      },
      "value" : {
        "kind" : "StringLiteral",
        "location" : [ 6, 13, 6, 14 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "str"
        },
        "value" : ""
      }
    }, {
      "kind" : "VarDef",
      "location" : [ 7, 5, 7, 13 ],
      "var" : {
        "kind" : "TypedVar",
        "location" : [ 7, 5, 7, 9 ],
        "identifier" : {
          "kind" : "Identifier",
          "location" : [ 7, 5, 7, 5 ],
          "name" : "y"
        },
        "type" : {
          "kind" : "ClassType",
          "location" : [ 7, 7, 7, 9 ],
          "className" : "int"
        }
      },
      "value" : {
        "kind" : "IntegerLiteral",
        "location" : [ 7, 13, 7, 13 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "value" : 1
      }
    }, {
      "kind" : "FuncDef",
      "location" : [ 8, 5, 11, 51 ],
      "name" : {
        "kind" : "Identifier",
        "location" : [ 8, 9, 8, 11 ],
        "name" : "bar"
      },
      "params" : [ {
        "kind" : "TypedVar",
        "location" : [ 8, 13, 8, 20 ],
        "identifier" : {
          "kind" : "Identifier",
          "location" : [ 8, 13, 8, 16 ],
          "name" : "self"
        },
        "type" : {
          "kind" : "ClassType",
          "location" : [ 8, 18, 8, 20 ],
          "className" : "A"
        }
      } ],
      "returnType" : {
        "kind" : "ClassType",
        "location" : [ 8, 26, 8, 28 ],
        "className" : "int"
      },
      "declarations" : [ ],
      "statements" : [ {
        "kind" : "ExprStmt",
        "location" : [ 9, 9, 9, 16 ],
        "expr" : {
          "kind" : "CallExpr",
          "location" : [ 9, 9, 9, 16 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "<None>"
          },
          "function" : {
            "kind" : "Identifier",
            "location" : [ 9, 9, 9, 13 ],
            "inferredType" : {
              "kind" : "FuncType",
              "parameters" : [ {
                "kind" : "ClassValueType",
                "className" : "object"
              } ],
              "returnType" : {
                "kind" : "ClassValueType",
                "className" : "<None>"
              }
            },
            "name" : "print"
          },
          "args" : [ {
            "kind" : "Identifier",
            "location" : [ 9, 15, 9, 15 ],
            "inferredType" : {
              "kind" : "ClassValueType",
              "className" : "int"
            },
            "name" : "x"
          } ]
        }
      }, {
        "kind" : "AssignStmt",
        "location" : [ 10, 9, 10, 13 ],
        "targets" : [ {
          "kind" : "Identifier",
          "location" : [ 10, 9, 10, 9 ],
          "errorMsg" : "Cannot assign to variable that is not explicitly declared in this scope: x",
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "name" : "x"
        } ],
        "value" : {
          "kind" : "IntegerLiteral",
          "location" : [ 10, 13, 10, 13 ],
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          },
          "value" : 3
        }
      }, {
        "kind" : "ReturnStmt",
        "location" : [ 11, 9, 11, 16 ],
        "errorMsg" : "Expected type `int`; got type `object`",
        "value" : {
          "kind" : "Identifier",
          "location" : [ 11, 16, 11, 16 ],
          "errorMsg" : "Not a variable: y",
          "inferredType" : {
            "kind" : "ClassValueType",
            "className" : "object"
          },
          "name" : "y"
        }
      } ]
    } ]
  } ],
  "statements" : [ ],
  "errors" : {
    "errors" : [ {
      "kind" : "CompilerError",
      "location" : [ 4, 5, 4, 5 ],
      "message" : "Cannot assign to variable that is not explicitly declared in this scope: x"
    }, {
      "kind" : "CompilerError",
      "location" : [ 10, 9, 10, 9 ],
      "message" : "Cannot assign to variable that is not explicitly declared in this scope: x"
    }, {
      "kind" : "CompilerError",
      "location" : [ 11, 16, 11, 16 ],
      "message" : "Not a variable: y"
    }, {
      "kind" : "CompilerError",
      "location" : [ 11, 9, 11, 16 ],
      "message" : "Expected type `int`; got type `object`"
    } ],
    "kind" : "Errors",
    "location" : [ 0, 0, 0, 0 ]
  }
}